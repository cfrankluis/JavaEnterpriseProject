
server:
  port: 9022

spring:
  datasource:
    url: jdbc:postgresql://${TRAINING_DB_ENDPOINT}/foodSpringData
    username: ${TRAINING_DB_USERNAME}
    password: ${TRAINING_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: create
      
      
      


#      hbm2ddl.auto is a hibernate mapping to your ddl-schema.
#      
#      WHat are settings for hbm2ddl.auto?
#      
#      CREATE
#      drops all existing tables (and other entities) with names you have provided in annotations
#      then hibernate will create your schema from scratch.
#      (THIS IS NOT PARTICULARLY GREAT FOR PRODUCTION!!! THIS is used for Dev purposes)
#      
#      VALIDATE
#      hibernate checks to make sure the schema exists as expected before operating
#      
#      UPDATE
#      hibernate will NOT delete anything, it'll only add/modify existing schema elements, so that
#      the schema works with hibernate's schema
#      
#      CREATE-DROP
#      hibernate will create your schema then delete it when the application ends
#      
#      NONE
#      well...it means hibernate won't do anything to your schema automatically


  
#THIS is how we'd do the exact same configuration inside of a properties file
#spring.datasource.url= ....stuff
#spring.datasource.username= ....stuff
#spring.datasource.password= ....stuff
# and so on....


